# This is a basic workflow to help you get started with Actions

name: Pipeline Logic Test

# Controls when the workflow will run
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: 22

      - name: Cache NPM dependencies
        uses: actions/cache@v3
        id: cache-install
        with:
          path: |
            ~/.npm
            node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}

      - if: steps.cache-install.outputs.cache-hit != 'true'
        run: npm install

      - name: debug
        run: |
          npm list

  use_build:
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: 22

      - name: Cache NPM dependencies
        uses: actions/cache@v3
        id: cache-install
        with:
          path: |
            ~/.npm
            node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}
      - if: steps.cache-install.outputs.cache-hit != 'true'
        run: npm install

      - name: debug
        run: |
          npm list


#  fail_test:
#    runs-on: ubuntu-latest
#    steps:
#      - name: must fail
#        run: |
#          /bin/nonexistent --wtf
#
#  must_run:
#    needs: [ fail_test ]
#    runs-on: ubuntu-latest
#    if: success() || failure()
#    steps:
#      - name: must fail
#        run: |
#          echo "Yipeee"
#
#  archive:
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v4
#
#      - name: Create tarball
#        run: |
#          mkdir -p ../dist
#          git archive --format=tar.gz -o repo.tgz \
#             --prefix=${{ github.ref_name }} ${{ github.ref_name }}
#          ls -l
#
#      - name: Upload tarball
#        uses: actions/upload-artifact@v4
#        with:
#          name: "${{ github.ref_name }}_tarball"
#          path: repo.tgz
#
#  build:
#    needs: [archive]
#    runs-on: ubuntu-latest
#    steps:
#      - name: Download tarball
#        uses: actions/download-artifact@v4
#        with:
#          name: "${{ github.ref_name }}_tarball"
#
#      - uses: geekyeggo/delete-artifact@v5
#        with:
#          name: "{{ github.ref_name }}_tarball"
#
